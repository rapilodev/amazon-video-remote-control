#!/usr/bin/perl
use warnings;
use strict;
use utf8;
use feature 'state';
{
    package AmazonRemoteControlServer;

    use HTTP::Server::Simple::CGI;
    use base qw(HTTP::Server::Simple::CGI);

    sub handle_request {
        my $self = shift;
        my $cgi  = shift;

        print "HTTP/1.0 200 OK\r\n";
        return unless ref $cgi;
        main::handle_request(scalar($cgi->param('key')));
    }
}

sub handle_request{
    my $key = shift;

    state $data = do { local $/; <DATA> };
    print qq{Content-type:text/html;charset:utf-8;\n\n}.$data;
    return unless $key;
    return unless $key=~/^(LEFT|RIGHT|UP|DOWN|SPACE)$/;
    my $device = (glob("/dev/input/by-path/*event-kbd"))[0];
    die "no keyboard found at /dev/input/by-path" unless $device;
    system qq{evemu-event $device --type EV_KEY --code KEY_$key --value 1 --sync};
    system qq{evemu-event $device --type EV_KEY --code KEY_$key --value 0 --sync};
}


AmazonRemoteControlServer->new(8080)->run();

__DATA__
<html>
<head>
<meta charset="utf8">
<meta name="viewport" content="initial-scale=1, maximum-scale=1">
<style>
    *{
        border:0;
        padding:0;
        background:#111;
    }
    .centered {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
    table{
        width:100vmin;
        height:100vmin;
    }
    td{
        width:25vmin;
        height:25vmin;
        text-align:center;
    }
    button:hover{
        color: #000;
        background:#fff;
        border:        1vmin solid #fff;
        border-bottom: 1vmin solid #666;
        border-right:  1vmin solid #666;
    }
    button{
        margin:2vmin;
        width:66%;
        height:66%;
        font-size:5vmin;
        cursor:pointer;
        background:#ccc;
        color:white;
        border-radius:5vmin;
        border: 1vmin solid #666;
        border-bottom: 1vmin solid #666;
        border-right:  1vmin solid #666;
        transition: all 1s;
    }
</style>
<script>
    function call(key){
        fetch('/?key='+key);
        window.navigator.vibrate(50);
    }
    document.addEventListener('keyup', function (e) {
        if ((e.key=='ArrowLeft')  || (e.key=='MediaRewind'))      call ('LEFT');
        if ((e.key=='ArrowRight') || (e.key=='MediaFastForward')) call ('RIGHT');
        if ((e.key=='ArrowUp')    || (e.key=='AudioVolumeUp'))    call ('UP');
        if ((e.key=='ArrowDown')  || (e.key=='AudioVolumeDown'))  call ('DOWN');
        if ((e.key==' ')          || (e.key=='MediaPlayPause'))   call ('SPACE');
    });
</script>
</head>
<body>
<div class="centered">
    <table>
    <tr>
        <td></td>
        <td><button onclick="call('UP')">Vol. +</button></td>
        <td></td>
    </tr>
    <tr>
        <td><button onclick="call('LEFT')">&lt;&lt;</button></td>
        <td><button onclick="call('SPACE')">&#x25b6; / ||</button></td>
        <td><button onclick="call('RIGHT')">&gt;&gt;</button></td>
    </tr>
    <tr>
        <td></td>
        <td><button onclick="call('DOWN')">Vol. -</button></td>
        <td></td>
    </tr>
</div>
</body>
</html>

